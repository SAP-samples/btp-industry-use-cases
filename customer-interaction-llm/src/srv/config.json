{
  "use_cases": [
    {
      "name": "sentiment-analysis",
      "desc": "Turning LLM into an REST API of text sentiment analysis with prompt engineering.",
      "target_role": "sentiment-analyser"
    },
    {
      "name": "text-summarisation",
      "desc": "Turning LLM into an REST API of summarising an input text into a title and a short summary with configurations",
      "target_role": "text-summariser",
      "unit": "word",
      "title_length": 20,
      "summary_length": 100
    },
    {
      "name": "entity-extraction",
      "desc": "Turning LLM into an REST API of extracting entities from text with configuration",
      "target_role": "entity-extractor",
      "entities": [
        {
          "field": "customer_no",
          "desc": "customer number, customer id, account, account no"
        }
      ]
    },
    {
      "name": "customer-message-process",
      "desc": "Turning LLM into an all-in-one REST API of processing customer text message with sentiment analysis, summarisation and entities extraction with prompt engineering.",
      "target_role": "customer-message-processor"
    },
    {
      "name": "words-embedding",
      "desc": "Leveraging LLM embedding API to turn text into vector",
      "target_role": "encoder"
    }
  ],
  "llm": {
    "vendor": "azure-openai",
    "api_base_url": "https://<YOUR_AZURE_OPENAI_INSTANCE>.openai.azure.com",
    "auth_method": "api-key",
    "api": [
      {
        "name": "completions",
        "model": "gpt-3.5-turbo",
        "api_path": "/openai/deployments/gpt-35-turbo/chat/completions?api-version=2023-03-15-preview",
        "max_token": 2048,
        "temperature": 0.8
      },
      {
        "name": "embeddings",
        "model": "text-embedding-ada-002",
        "api_path": "/openai/deployments/text-embedding-ada-002/embeddings?api-version=2022-12-01",
        "max_token": 2048
      }
    ],
    "roles": [
      {
        "name": "sentiment-analyser",
        "descr": "A sentiment analyser for the given text, which classifies into Positive, Neutral, Negative category and returns the result in JSON",
        "target_api": "completions",
        "system_prompt": "I would like your act as a sentiment analysis model on the input text message coming from a service ticketing system. Expected output in JSON as below\n{ \"sentiment\": \"{{Positive/Neutral/Negative}}\" }",
        "input_indicator": "Input text:",
        "output_indicator": "JSON:"
      },
      {
        "name": "text-summariser",
        "descr": "Summasing for the given text into a title and a summary returns the result in JSON",
        "target_api": "completions",
        "system_prompt": "I would like your to summarize the input text into a title not more than 100 characters and a short summary not more than 300 characters. Expected output in JSON as below\n{ \"title\": \"{{Generated title}}\",\"summary\": \"{{Generated summary}}\" }",
        "input_indicator": "Input text:",
        "output_indicator": "JSON:"
      },
      {
        "name": "entity-extractor",
        "descr": "Extracting a list of entities from the given text, returns the result in JSON",
        "target_api": "completions",
        "system_prompt": "I would like you to extract a list of entities from input text. An entity is made of a field and its value, such as customer_no, product_name etc. The field name follows snakecase naming conversion. Expected output in JSON as below\n{\"entities:\" [ {\"field\": \"{{the identified field}}\",\"value\": \"{{the extracted value of the field}}\" }]}",
        "input_indicator": "Input text:",
        "output_indicator": "JSON:"
      },
      {
        "name": "customer-message-processor",
        "target_api": "completions",
        "descr": "A customer message processor to perform sentiment analysis, summarise a title and a short desc, extract the entities from a customer text message",
        "system_prompt": "I would like you to act as a custom trained NLP model on text. \nHere are your tasks on the text.\n1.Apply Sentiment Analysis\n2.Generate a title less than 100 characters,and summarize the text into a short description less than 300 characters\n3.Extract the entities such as customer,product,order,delivery,invoice etc from the text \nHere is a preliminary list of the target entity fields and description. Please extract all the identifiable entities even not in the list below. Don't include any field with unknown value. \n-customer_no: alias customer number, customer id, account id, account number which could be used to identify a customer.\n-customer_name: customer name, account name\n-customer_phone: customer contact number. \n-product_no: product number, product id\n-product_name\n-order_no: sales order number, order id\n-order_date\n-delivery_no: delivery number, delivery id\n-delivery_date: delivery date, shipping date\n-invoice_no: alias invoice number, invoice id, receipt number, receipt id etc. which can be used to locate a invoice.\n-invoice_date: invoice date, purchase date\n-store_name\n-store_location\n\nFor those fields not in list must follow the Snakecase name conversation like product_name, no space allow.\n\nOutput expected in JSON format as below:\n{\"sentiment\":\"{{Positive/Neutral/Negative}}\",\"title\":\"{{The generated title based on the input text less than 100 characters}}\",\"summary\":\"{{The generated summary based on the input text less than 300 characters}}\",\"entities\":[{\"field\":\"{{the extracted fields such as product_name listed above}}\",\"value\":\"{{the extracted value of the field}}\"}]}",
        "input_indicator": "Input text:",
        "output_indicator": "JSON:"
      },
      {
        "name": "customer-message-processor-wt-sample",
        "target_api": "completions",
        "descr": "A customer message processor to perform sentiment analysis, summarise a title and a short desc, extract the entities from a customer text message",
        "system_prompt": "I would like you to act as a custom trained NLP model on text message in the service ticketing system. \n            Here are your tasks on the text.\n            1:Apply Sentiment Anslysis on the text\n            2.Generate a title less than 100 charaters, and summarize the text in less than 300 chraters as a short description.\n            3.Extract the entities such as customer, product, order, delivery, invoice etc from the text, in addition. \n            Here is a preliminary list of the target entity field and its description. Please extract all the entities even not in the list below.\n            1).customer_no: alias customer number,customer id, account id, account number which could be used to identify a customer.\n            2).customer_name: customer name, account name\n            3).customer_phone: customer contact number. \n            4).product_no: product number, product id\n            5).product_name: product name\n            6).order_no: sales order number, order id\n            7).delivery_no: delivery number, delivery id\n            8).delivery_date: delivery date, shipping date\n            9).invoice_no: alais invoice number, invoice id, receipt number, receipt id etc. which can be used to locate a invoice.\n            10).invoice_date: invoice date, purchase date\n            11).store_name: the store name\n            12).store_location: the store location\n            etc.\n            Output expected in JSON format as below:\n            {\n             'sentiment': '{{Positive/Neutral/Negative}}',\n             'title': '{{The generated title based on the input text less than 100 charaters}}',\n             'summary': '{{The generated summary based on the input text less than 300 charaters}}'\n             'entities': [\n             {\n             'field': '{{the fields such product_name listed above.}}', \n             'value': '{{the extracted value of the field}}' \n             }\n             ]\n            }\n\n            Here is an example\n            Input text: 'I have purchased a new Sumsung Frame TV 75' on 1 Feb 2023 from JB Hifi Store in CBD, and invoice number as 12099. I like the massive TV screen, however, its frame color(white) isn\u2019t what I wanted. The sales suggest us to take a white frame first, then exchange for another color later on. I would like to change it for wooden color. Please let's know when it is available. My phone number is 043183473.' \n            Expected output in JSON:\n            {\n             'category': 'Request',\n             'title': 'Frame change request',\n             'summary': 'I would like to exchange the frame to wooden color for my new Sumsung Frame TV 75' with invoice number 12099 purchased on 1 Feb 2023 from JB Hifi Store in CBD. Contact number as 043183473',\n             'entities': [\n             {\n             'field': 'product_name', \n             'value': 'Sumsung Frame TV 75'' \n             },\n             {\n             'field': 'invoice_no', \n             'value': '12099'' \n             },\n             {\n             'field': 'invoice_date', \n             'value': '1 Feb 2023' \n             },\n             {\n             'field': 'customer_phone', \n             'value': '043183473' \n             },\n             {\n             'field': 'store_name', \n             'value': 'JB Hifi' \n             },\n             {\n             'field': 'store_location', \n             'value': 'CBD' \n             }\n             ]\n            }",
        "input_indicator": "Input text:",
        "output_indicator": "JSON:"
      },
      {
        "name": "encoder",
        "target_api": "embeddings"
      }
    ]
  }
}
